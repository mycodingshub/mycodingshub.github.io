<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jest on Home</title>
    <link>https://mycodingshub.github.io/tags/jest/</link>
    <description>Recent content in Jest on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Tue, 26 Aug 2025 13:27:31 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/jest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node.js ESM 마이그레이션 완벽 가이드 Jest에서 Vitest까지</title>
      <link>https://mycodingshub.github.io/blog/2025-08-25-nodejs-esm-migration-guide-jest-to-vitest/</link>
      <pubDate>Tue, 26 Aug 2025 13:27:31 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-25-nodejs-esm-migration-guide-jest-to-vitest/</guid>
      <description>기존 CommonJS 프로젝트를 최신 ESM으로 전환하고, 테스트 러너를 Jest에서 Vitest로 마이그레이션하는 실전 가이드입니다. 복잡한 설정부터 에러 해결 팁까지 모든 과정을 상세하게 다룹니다.</description>
    </item>
    <item>
      <title>그 테스트 코드, 왜 읽기 힘든지 알려드릴까요</title>
      <link>https://mycodingshub.github.io/blog/2025-08-16-why-you-should-avoid-nesting-in-tests/</link>
      <pubDate>Sun, 17 Aug 2025 05:48:50 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-16-why-you-should-avoid-nesting-in-tests/</guid>
      <description>테스트 코드만 보면 머리가 아픈가요? describe와 beforeEach의 무분별한 중첩이 어떻게 테스트의 가독성을 해치는지, 그리고 명확성을 되찾는 AHA 테스트 원칙과 함수형 접근법을 Kent C. Dodds의 아티클을 통해 깊이 있게 파헤쳐 봅니다.</description>
    </item>
    <item>
      <title>React 서버 컴포넌트, 어떻게 테스트할까? (공식 지원 전까지의 유일한 해답)</title>
      <link>https://mycodingshub.github.io/blog/2025-07-12-how-to-test-react-server-components/</link>
      <pubDate>Sat, 12 Jul 2025 10:11:04 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-07-12-how-to-test-react-server-components/</guid>
      <description>React와 Next.js 팀이 아직 제공하지 않는 서버 컴포넌트(RSC) 테스트 방법. 커뮤니티에서 발견된 &amp;lsquo;핵&amp;rsquo;이지만 확실하게 동작하는 유틸리티 함수를 통해, 비동기 서버 컴포넌트를 테스트하는 유일한 방법을 알아봅니다.</description>
    </item>
  </channel>
</rss>
