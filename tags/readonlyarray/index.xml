<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ReadonlyArray on Home</title>
    <link>https://mycodingshub.github.io/tags/readonlyarray/</link>
    <description>Recent content in ReadonlyArray on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Sun, 17 Aug 2025 05:37:21 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/readonlyarray/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TypeScript 배열, `T[]` 대신 `ReadonlyArray&lt;T&gt;`를 써야 하는 이유</title>
      <link>https://mycodingshub.github.io/blog/2025-08-16-typescript-readonly-array-for-safer-code/</link>
      <pubDate>Sun, 17 Aug 2025 05:37:21 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-16-typescript-readonly-array-for-safer-code/</guid>
      <description>함수 하나 호출했을 뿐인데 원본 배열이 망가진 경험, 있으신가요? 이런 사이드 이펙트 버그를 원천 차단하는 TypeScript의 강력한 무기, &lt;code&gt;ReadonlyArray&amp;lt;T&amp;gt;&lt;/code&gt;의 모든 것을 알려드립니다. 이제 불변성은 선택이 아닌 필수입니다.</description>
    </item>
  </channel>
</rss>
