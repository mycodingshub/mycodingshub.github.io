<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloudflare on Home</title>
    <link>https://mycodingshub.github.io/tags/cloudflare/</link>
    <description>Recent content in Cloudflare on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Sun, 07 Sep 2025 05:36:05 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/cloudflare/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>리액트 라우터와 Hono로 최고의 Cloudflare 개발 경험 만들기</title>
      <link>https://mycodingshub.github.io/blog/2025-09-06-ultimate-template-for-react-router-hono-cloudflare/</link>
      <pubDate>Sun, 07 Sep 2025 05:36:05 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-09-06-ultimate-template-for-react-router-hono-cloudflare/</guid>
      <description>Cloudflare 환경에서 React Router와 Hono를 사용하는 가장 효율적인 방법을 소개합니다. 공식 템플릿의 느린 개발 속도 문제를 해결하고, Rolldown을 통해 빌드 속도를 극적으로 단축시킨 새로운 템플릿을 만나보세요.</description>
    </item>
    <item>
      <title>인터넷 주소의 주인은 누구일까? 1.1.1.1의 숨겨진 비밀</title>
      <link>https://mycodingshub.github.io/life/2025-07-08-who-decides-ip-addresses-and-the-story-of-1-1-1-1/</link>
      <pubDate>Tue, 08 Jul 2025 12:26:42 +0000</pubDate>
      <guid>https://mycodingshub.github.io/life/2025-07-08-who-decides-ip-addresses-and-the-story-of-1-1-1-1/</guid>
      <description>인터넷 주소의 주인은 누구일까? 1.1.1.1의 숨겨진 비밀</description>
    </item>
    <item>
      <title>Hono.js 튜토리얼 - 간단한 REST API 만들기</title>
      <link>https://mycodingshub.github.io/blog/2025-04-20-comprehensive-honojs-tutorial/</link>
      <pubDate>Sun, 20 Apr 2025 12:28:10 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-04-20-comprehensive-honojs-tutorial/</guid>
      <description>이 글에서는 Hono.js를 사용하여 간단한 REST API를 만드는 방법을 배웁니다. Hono.js는 경량화된 웹 프레임워크로, 높은 성능과 간결한 문법을 제공합니다.</description>
    </item>
    <item>
      <title>React Router V7과 Cloudflare Pages 그리고 D1 Database 사용</title>
      <link>https://mycodingshub.github.io/blog/2024-12-25-react-router-with-cloudflare-pages-d-1-db/</link>
      <pubDate>Wed, 25 Dec 2024 06:47:59 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-12-25-react-router-with-cloudflare-pages-d-1-db/</guid>
      <description>React Router V7를 Cloudflare Pages에 D1 DB를 이용해서 배포할 수 있게 개조하기</description>
    </item>
    <item>
      <title>Cloudflare Workers에서 password hashing(패스워드 해싱하기)</title>
      <link>https://mycodingshub.github.io/blog/2024-10-27-cloudflare-password-hashing-logic/</link>
      <pubDate>Sun, 27 Oct 2024 02:30:56 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-10-27-cloudflare-password-hashing-logic/</guid>
      <description>Cloudflare에서는 bcrypt 라이브러리를 못 씁니다. 그래서 Cloudflare에서 사용할 수 있는 password hashing 로직을 구글링을 통해 구했습니다.</description>
    </item>
    <item>
      <title>Fullstack 강좌 - Hono RPC &#43; Remix &#43; Cloudflare &#43; D1 DB 조합으로 Todo 앱 만들기</title>
      <link>https://mycodingshub.github.io/blog/2024-10-19-cloudflare-remix-hono-todo-app/</link>
      <pubDate>Sat, 19 Oct 2024 03:00:08 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-10-19-cloudflare-remix-hono-todo-app/</guid>
      <description>Hono RPC 기능을 활용하여 API Endpoint 구축하여 Remix Framework으로 Todo 앱 만들기</description>
    </item>
    <item>
      <title>Cloudflare에서 Remix Framework과 Hono의 RPC 기능을 활용한 API Endpoint 구축하기</title>
      <link>https://mycodingshub.github.io/blog/2024-10-14-cloudflare-remix-framework-hono-rpc-api-endpoint/</link>
      <pubDate>Mon, 14 Oct 2024 10:40:25 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-10-14-cloudflare-remix-framework-hono-rpc-api-endpoint/</guid>
      <description>이 글에서는 Cloudflare 환경에서 Remix Framework과 Hono의 RPC 기능을 활용하여 API Endpoint를 구축하는 방법을 단계별로 설명합니다. 효율적인 API 통신을 위한 실용적인 팁과 함께 배포 과정을 안내합니다.</description>
    </item>
    <item>
      <title>React 18의 useFormState를 활용하여 Next.js와 Lucia Auth의 유저 로그인 구현해 보기</title>
      <link>https://mycodingshub.github.io/blog/2024-08-19-refactoring-nextjs-lucia-auth-code-with-useformstate-and-useformstatus/</link>
      <pubDate>Mon, 19 Aug 2024 12:27:05 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-08-19-refactoring-nextjs-lucia-auth-code-with-useformstate-and-useformstatus/</guid>
      <description>기존에 만들었넌 Next.js, Lucia, Cloudflare D1 DB를 활용한 유저 로그인 구현을 조금 더 세련되게 꾸몄습니다.</description>
    </item>
    <item>
      <title>Next.js에서 Lucia Auth, Cloudflare D1 DB를 이용해서 유저 로그인 구현하기</title>
      <link>https://mycodingshub.github.io/blog/2024-08-16-nextjs-lucia-auth-with-cloudflare-d-1-db/</link>
      <pubDate>Fri, 16 Aug 2024 10:18:26 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-08-16-nextjs-lucia-auth-with-cloudflare-d-1-db/</guid>
      <description>이번 강좌에서는 Lucia Auth를 Next.js상에서 구현해 보겠습니다. Cloudflare D1 DB를 사용할 겁니다.</description>
    </item>
    <item>
      <title>네이버 아이디 로그인 구현하기 - Cloudflare, Hono, Lucia Auth</title>
      <link>https://mycodingshub.github.io/blog/2024-08-04-cloudflare-hono-lucia-auth-naver-login/</link>
      <pubDate>Sun, 04 Aug 2024 00:53:52 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-08-04-cloudflare-hono-lucia-auth-naver-login/</guid>
      <description>Lucia Auth는 사용하고 arctic 패키지는 사용하지 않고 Naver ID 로그인을 구현해 봤습니다.</description>
    </item>
  </channel>
</rss>
