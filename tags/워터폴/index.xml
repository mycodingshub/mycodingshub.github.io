<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>워터폴 on Home</title>
    <link>https://mycodingshub.github.io/tags/%EC%9B%8C%ED%84%B0%ED%8F%B4/</link>
    <description>Recent content in 워터폴 on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Sat, 23 Aug 2025 10:39:09 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/%EC%9B%8C%ED%84%B0%ED%8F%B4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React Suspense, 잘못 쓰면 폭포수처럼 느려집니다 (워터폴 피하는 법)</title>
      <link>https://mycodingshub.github.io/blog/2025-08-22-react-suspense-avoiding-waterfalls-in-data-fetching/</link>
      <pubDate>Sat, 23 Aug 2025 10:39:09 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-22-react-suspense-avoiding-waterfalls-in-data-fetching/</guid>
      <description>React의 Suspense는 비동기 UI를 위한 강력한 도구지만, 자칫하면 데이터 로딩이 순차적으로 지연되는 워터폴 현상을 유발할 수 있습니다. 중첩된 Suspense와 병렬 Suspense의 차이점을 이해하고, 워터폴을 피하는 세 가지 실전 패턴을 알아봅니다.</description>
    </item>
  </channel>
</rss>
