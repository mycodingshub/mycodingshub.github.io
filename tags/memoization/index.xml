<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memoization on Home</title>
    <link>https://mycodingshub.github.io/tags/memoization/</link>
    <description>Recent content in Memoization on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Fri, 22 Aug 2025 14:11:45 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/memoization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React Query select 옵션, 이걸로 렌더링 최적화 끝판왕 되기</title>
      <link>https://mycodingshub.github.io/blog/2025-08-20-react-query-select-option-mastering-rendering-optimization/</link>
      <pubDate>Fri, 22 Aug 2025 14:11:45 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-20-react-query-select-option-mastering-rendering-optimization/</guid>
      <description>React Query의 select 옵션을 활용해 불필요한 리렌더링을 막는 방법을 알아봅니다. 기본적인 사용법부터 TypeScript 타입 추론, useCallback을 사용한 성능 최적화, 그리고 fast-memoize를 활용한 최종 보스급 최적화까지, select의 모든 것을 파헤쳐 봅니다.</description>
    </item>
    <item>
      <title>리액트 컴파일러, &#39;그냥&#39; 켜기만 하면 정말 빨라질까?</title>
      <link>https://mycodingshub.github.io/blog/2025-08-20-react-compiler-real-world-review-is-it-magic/</link>
      <pubDate>Fri, 22 Aug 2025 14:06:06 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-20-react-compiler-real-world-review-is-it-magic/</guid>
      <description>리액트 컴파일러를 실제 프로젝트에 적용해 본 후기입니다. 간단한 예제에서는 완벽했지만, 실제 코드에서는 예상치 못한 문제들이 있었습니다. 컴파일러를 100% 활용하기 위해 우리가 알아야 할 것들을 살펴봅니다.</description>
    </item>
  </channel>
</rss>
