<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>성능 최적화 on Home</title>
    <link>https://mycodingshub.github.io/tags/%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94/</link>
    <description>Recent content in 성능 최적화 on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Sat, 23 Aug 2025 11:23:43 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Next.js보다 4배 빠른 React 프레임워크가 등장했습니다</title>
      <link>https://mycodingshub.github.io/blog/2025-08-22-rari-a-react-framework-4-x-faster-than-nextjs-with-rust/</link>
      <pubDate>Sat, 23 Aug 2025 11:23:43 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-22-rari-a-react-framework-4-x-faster-than-nextjs-with-rust/</guid>
      <description>거의 25년간 웹 개발을 해온 베테랑 개발자가 Next.js보다 4배 빠른 React 프레임워크 Rari를 공개했습니다. Rust 런타임을 기반으로 한 Rari의 경이로운 성능과 그 비밀을 파헤쳐 봅니다.</description>
    </item>
    <item>
      <title>React Suspense, 잘못 쓰면 폭포수처럼 느려집니다 (워터폴 피하는 법)</title>
      <link>https://mycodingshub.github.io/blog/2025-08-22-react-suspense-avoiding-waterfalls-in-data-fetching/</link>
      <pubDate>Sat, 23 Aug 2025 10:39:09 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-22-react-suspense-avoiding-waterfalls-in-data-fetching/</guid>
      <description>React의 Suspense는 비동기 UI를 위한 강력한 도구지만, 자칫하면 데이터 로딩이 순차적으로 지연되는 워터폴 현상을 유발할 수 있습니다. 중첩된 Suspense와 병렬 Suspense의 차이점을 이해하고, 워터폴을 피하는 세 가지 실전 패턴을 알아봅니다.</description>
    </item>
    <item>
      <title>TanStack Query, 아직도 로딩 스피너 쓰세요? (타입스크립트와 프리페칭으로 만드는 즉각적인 UX)</title>
      <link>https://mycodingshub.github.io/blog/2025-08-22-tanstack-query-advanced-patterns-typescript-and-prefetching/</link>
      <pubDate>Sat, 23 Aug 2025 09:52:55 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-22-tanstack-query-advanced-patterns-typescript-and-prefetching/</guid>
      <description>TanStack Query를 타입스크립트로 안전하게 만들고, 프리페칭으로 로딩 스피너를 없애는 고급 패턴을 알아봅니다. 제네릭 훅부터 on hover 프리페칭까지, 사용자 경험을 극적으로 향상시키는 실전 팁을 확인하세요.</description>
    </item>
    <item>
      <title>NDC Oslo 2025 - 당신의 자바스크립트는 안녕한가요 (성능 최적화 총정리)</title>
      <link>https://mycodingshub.github.io/blog/2025-08-21-javascript-performance-optimization-deep-dive/</link>
      <pubDate>Sat, 23 Aug 2025 06:09:33 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-21-javascript-performance-optimization-deep-dive/</guid>
      <description>자바스크립트 성능 최적화의 모든 것을 다룬 해외 유명 강연의 핵심을 정리했습니다. 웹 워커를 활용한 멀티스레딩부터 메모리 누수 방지, JIT 컴파일러 최적화까지, 당신의 코드를 한 단계 빠르게 만들어 줄 실전 팁을 만나보세요.</description>
    </item>
    <item>
      <title>리액트 UI가 멈추나요? 웹 워커로 해결하는 A to Z 가이드</title>
      <link>https://mycodingshub.github.io/blog/2025-08-20-unlocking-web-workers-with-react-a-to-z-guide/</link>
      <pubDate>Fri, 22 Aug 2025 14:31:45 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-20-unlocking-web-workers-with-react-a-to-z-guide/</guid>
      <description>리액트 앱에서 무거운 계산으로 UI가 멈추는 문제를 웹 워커, 공유 워커를 사용해 해결하는 방법을 단계별로 알아봅니다. 큐를 이용한 작업 순서 보장과 캐싱 전략까지 실용적인 예제와 함께 설명합니다.</description>
    </item>
    <item>
      <title>리액트 컴파일러, &#39;그냥&#39; 켜기만 하면 정말 빨라질까?</title>
      <link>https://mycodingshub.github.io/blog/2025-08-20-react-compiler-real-world-review-is-it-magic/</link>
      <pubDate>Fri, 22 Aug 2025 14:06:06 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-20-react-compiler-real-world-review-is-it-magic/</guid>
      <description>리액트 컴파일러를 실제 프로젝트에 적용해 본 후기입니다. 간단한 예제에서는 완벽했지만, 실제 코드에서는 예상치 못한 문제들이 있었습니다. 컴파일러를 100% 활용하기 위해 우리가 알아야 할 것들을 살펴봅니다.</description>
    </item>
  </channel>
</rss>
