<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>컴포넌트 테스팅 on Home</title>
    <link>https://mycodingshub.github.io/tags/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%85%8C%EC%8A%A4%ED%8C%85/</link>
    <description>Recent content in 컴포넌트 테스팅 on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Sat, 12 Jul 2025 10:11:04 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%85%8C%EC%8A%A4%ED%8C%85/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React 서버 컴포넌트, 어떻게 테스트할까? (공식 지원 전까지의 유일한 해답)</title>
      <link>https://mycodingshub.github.io/blog/2025-07-12-how-to-test-react-server-components/</link>
      <pubDate>Sat, 12 Jul 2025 10:11:04 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-07-12-how-to-test-react-server-components/</guid>
      <description>React와 Next.js 팀이 아직 제공하지 않는 서버 컴포넌트(RSC) 테스트 방법. 커뮤니티에서 발견된 &amp;lsquo;핵&amp;rsquo;이지만 확실하게 동작하는 유틸리티 함수를 통해, 비동기 서버 컴포넌트를 테스트하는 유일한 방법을 알아봅니다.</description>
    </item>
  </channel>
</rss>
