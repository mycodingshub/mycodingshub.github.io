<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>컴포넌트 조합 on Home</title>
    <link>https://mycodingshub.github.io/tags/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%A1%B0%ED%95%A9/</link>
    <description>Recent content in 컴포넌트 조합 on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Sat, 23 Aug 2025 07:01:54 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%A1%B0%ED%95%A9/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>서버 컴포넌트, &#39;이렇게&#39; 쓰시면 말짱 꽝입니다 (RSC 조합의 기술)</title>
      <link>https://mycodingshub.github.io/blog/2025-08-21-react-server-client-component-composition-in-practice/</link>
      <pubDate>Sat, 23 Aug 2025 07:01:54 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-21-react-server-client-component-composition-in-practice/</guid>
      <description>React 서버 컴포넌트의 이점을 해치지 않으면서 클라이언트 컴포넌트와 효과적으로 조합하는 핵심 패턴을 알아봅니다. 서버 컴포넌트를 children으로 전달하는 간단한 방법으로 성능과 재사용성을 모두 잡아보세요.</description>
    </item>
  </channel>
</rss>
