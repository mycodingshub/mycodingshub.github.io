<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React Server Components on Home</title>
    <link>https://mycodingshub.github.io/tags/react-server-components/</link>
    <description>Recent content in React Server Components on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Sat, 23 Aug 2025 10:39:09 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/react-server-components/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React Suspense, 잘못 쓰면 폭포수처럼 느려집니다 (워터폴 피하는 법)</title>
      <link>https://mycodingshub.github.io/blog/2025-08-22-react-suspense-avoiding-waterfalls-in-data-fetching/</link>
      <pubDate>Sat, 23 Aug 2025 10:39:09 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-22-react-suspense-avoiding-waterfalls-in-data-fetching/</guid>
      <description>React의 Suspense는 비동기 UI를 위한 강력한 도구지만, 자칫하면 데이터 로딩이 순차적으로 지연되는 워터폴 현상을 유발할 수 있습니다. 중첩된 Suspense와 병렬 Suspense의 차이점을 이해하고, 워터폴을 피하는 세 가지 실전 패턴을 알아봅니다.</description>
    </item>
    <item>
      <title>서버 컴포넌트, &#39;이렇게&#39; 쓰시면 말짱 꽝입니다 (RSC 조합의 기술)</title>
      <link>https://mycodingshub.github.io/blog/2025-08-21-react-server-client-component-composition-in-practice/</link>
      <pubDate>Sat, 23 Aug 2025 07:01:54 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-21-react-server-client-component-composition-in-practice/</guid>
      <description>React 서버 컴포넌트의 이점을 해치지 않으면서 클라이언트 컴포넌트와 효과적으로 조합하는 핵심 패턴을 알아봅니다. 서버 컴포넌트를 children으로 전달하는 간단한 방법으로 성능과 재사용성을 모두 잡아보세요.</description>
    </item>
    <item>
      <title>React Cache 그냥 쓰셨나요? (숨겨진 일관성의 비밀)</title>
      <link>https://mycodingshub.github.io/blog/2025-08-21-react-cache-the-secret-of-consistency/</link>
      <pubDate>Sat, 23 Aug 2025 06:22:43 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-21-react-cache-the-secret-of-consistency/</guid>
      <description>React의 cache 함수는 단순한 성능 최적화 도구가 아닙니다. React 서버 컴포넌트(RSC) 환경에서 데이터 일관성을 보장하는 핵심 API로서 cache의 진짜 역할을 깊이 있게 파헤칩니다.</description>
    </item>
    <item>
      <title>코드로 읽는 리액트 연대기 - 왜 리액트는 지금의 모습이 되었는가</title>
      <link>https://mycodingshub.github.io/blog/2025-07-12-the-complete-story-of-react-through-code-and-philosophy/</link>
      <pubDate>Sat, 12 Jul 2025 09:37:18 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-07-12-the-complete-story-of-react-through-code-and-philosophy/</guid>
      <description>React는 단편적인 API의 집합이 아닙니다. 초창기 페이스북의 고민부터 Fiber 아키텍처, 그리고 서버 컴포넌트에 이르기까지, 일관된 철학 아래 React가 어떻게 진화해왔는지 그 완전한 역사를 코드와 함께 심층적으로 탐구합니다.</description>
    </item>
    <item>
      <title>RSC(리액트 서버 컴포넌트) 이해 2편, 번들러와 인터리빙, 그리고 성능 최적화 전략까지</title>
      <link>https://mycodingshub.github.io/blog/2025-01-20-rsc-guide-2-bundler-interleaving-optimization/</link>
      <pubDate>Mon, 20 Jan 2025 12:01:20 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-01-20-rsc-guide-2-bundler-interleaving-optimization/</guid>
      <description>RSC(리액트 서버 컴포넌트)에 대해 번들러와 인터리빙, 그리고 성능 최적화 전략까지 알아보겠습니다.</description>
    </item>
    <item>
      <title>RSC(리액트 서버 컴포넌트) 동작 원리부터 성능 최적화까지</title>
      <link>https://mycodingshub.github.io/blog/2025-01-20-rsc-tutorial-1-react-server-components-explained/</link>
      <pubDate>Mon, 20 Jan 2025 11:54:22 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-01-20-rsc-tutorial-1-react-server-components-explained/</guid>
      <description>React Server Comoponents 에 대해 심도 있게 공부해 봅시다.</description>
    </item>
    <item>
      <title>React 19 완벽 가이드 1편 - 서버 컴포넌트, Actions, Async Script 지원, 서드파티 스크립트 호환성 향상</title>
      <link>https://mycodingshub.github.io/blog/2024-09-21-react-19-cheat-sheet-1-server-component-actions/</link>
      <pubDate>Sat, 21 Sep 2024 03:58:35 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-09-21-react-19-cheat-sheet-1-server-component-actions/</guid>
      <description>React 19 치트 시트입니다. 서버 컴포넌트, Actions, Async Script 지원, 서드파티 스크립트 호환성 향상에 대해 알아봅시다.</description>
    </item>
  </channel>
</rss>
