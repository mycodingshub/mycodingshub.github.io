<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Select on Home</title>
    <link>https://mycodingshub.github.io/tags/select/</link>
    <description>Recent content in Select on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Fri, 22 Aug 2025 14:11:45 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/select/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React Query select 옵션, 이걸로 렌더링 최적화 끝판왕 되기</title>
      <link>https://mycodingshub.github.io/blog/2025-08-20-react-query-select-option-mastering-rendering-optimization/</link>
      <pubDate>Fri, 22 Aug 2025 14:11:45 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-20-react-query-select-option-mastering-rendering-optimization/</guid>
      <description>React Query의 select 옵션을 활용해 불필요한 리렌더링을 막는 방법을 알아봅니다. 기본적인 사용법부터 TypeScript 타입 추론, useCallback을 사용한 성능 최적화, 그리고 fast-memoize를 활용한 최종 보스급 최적화까지, select의 모든 것을 파헤쳐 봅니다.</description>
    </item>
  </channel>
</rss>
