<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>State Management on Home</title>
    <link>https://mycodingshub.github.io/tags/state-management/</link>
    <description>Recent content in State Management on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Wed, 18 Sep 2024 05:47:44 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/state-management/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React Zustand 상태관리 실전 예제로 마스터하기</title>
      <link>https://mycodingshub.github.io/blog/2024-09-18-understanding-react-zustand-deep-dive/</link>
      <pubDate>Wed, 18 Sep 2024 05:47:44 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-09-18-understanding-react-zustand-deep-dive/</guid>
      <description>React 상태관리는 이제 Zustand로 마스터하십시요.</description>
    </item>
    <item>
      <title>React Query로 구현하는 간단하고 강력한 상태 관리 솔루션</title>
      <link>https://mycodingshub.github.io/blog/2024-07-16-use-tanstack-react-query-as-global-state-management/</link>
      <pubDate>Tue, 16 Jul 2024 12:49:15 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-07-16-use-tanstack-react-query-as-global-state-management/</guid>
      <description>React Query를 활용하여 Redux나 Zustand 대신 간단하고 강력한 상태 관리 시스템을 구현하는 방법을 소개합니다. 기존 데이터 페칭 라이브러리를 사용해 비동기 상태 관리도 함께 다루어봅니다.</description>
    </item>
  </channel>
</rss>
