<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React Query on Home</title>
    <link>https://mycodingshub.github.io/tags/react-query/</link>
    <description>Recent content in React Query on Home</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) All Right Reserved.</copyright>
    <lastBuildDate>Sat, 23 Aug 2025 09:52:55 +0000</lastBuildDate>
    <atom:link href="https://mycodingshub.github.io/tags/react-query/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TanStack Query, 아직도 로딩 스피너 쓰세요? (타입스크립트와 프리페칭으로 만드는 즉각적인 UX)</title>
      <link>https://mycodingshub.github.io/blog/2025-08-22-tanstack-query-advanced-patterns-typescript-and-prefetching/</link>
      <pubDate>Sat, 23 Aug 2025 09:52:55 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-22-tanstack-query-advanced-patterns-typescript-and-prefetching/</guid>
      <description>TanStack Query를 타입스크립트로 안전하게 만들고, 프리페칭으로 로딩 스피너를 없애는 고급 패턴을 알아봅니다. 제네릭 훅부터 on hover 프리페칭까지, 사용자 경험을 극적으로 향상시키는 실전 팁을 확인하세요.</description>
    </item>
    <item>
      <title>TanStack Query, 아직도 이렇게 쓰세요? (API 팩토리 패턴으로 boilerplate 박살내기)</title>
      <link>https://mycodingshub.github.io/blog/2025-08-22-tanstack-query-api-factory-pattern-for-less-boilerplate/</link>
      <pubDate>Sat, 23 Aug 2025 09:46:42 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-22-tanstack-query-api-factory-pattern-for-less-boilerplate/</guid>
      <description>TanStack Query의 반복적인 API 훅 작성에 지치셨나요? 팩토리 패턴을 활용해 CRUD 훅을 자동으로 생성하고, 보일러플레이트를 획기적으로 줄여 유지보수성을 높이는 실전 방법을 소개합니다.</description>
    </item>
    <item>
      <title>React Query select 옵션, 이걸로 렌더링 최적화 끝판왕 되기</title>
      <link>https://mycodingshub.github.io/blog/2025-08-20-react-query-select-option-mastering-rendering-optimization/</link>
      <pubDate>Fri, 22 Aug 2025 14:11:45 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-08-20-react-query-select-option-mastering-rendering-optimization/</guid>
      <description>React Query의 select 옵션을 활용해 불필요한 리렌더링을 막는 방법을 알아봅니다. 기본적인 사용법부터 TypeScript 타입 추론, useCallback을 사용한 성능 최적화, 그리고 fast-memoize를 활용한 최종 보스급 최적화까지, select의 모든 것을 파헤쳐 봅니다.</description>
    </item>
    <item>
      <title>초보자 완벽 가이드 - React Query와 Vite로 무한 스크롤 구현하기 (`useInfiniteQuery` 완전 정복)</title>
      <link>https://mycodingshub.github.io/blog/2025-07-12-react-query-infinite-scroll-from-scratch-with-vite/</link>
      <pubDate>Sat, 12 Jul 2025 09:47:29 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-07-12-react-query-infinite-scroll-from-scratch-with-vite/</guid>
      <description>Vite로 React 프로젝트를 시작하고, React Query를 설정한 뒤, useInfiniteQuery 훅을 사용하여 복잡한 무한 스크롤 UI를 얼마나 쉽고 강력하게 만들 수 있는지 단계별로 알아봅니다.</description>
    </item>
    <item>
      <title>리액트 데이터 페칭 완전 정복 - useEffect부터 서버 컴포넌트까지</title>
      <link>https://mycodingshub.github.io/blog/2025-07-09-react-data-fetching-study-guide-from-useeffect-to-server-components/</link>
      <pubDate>Wed, 09 Jul 2025 12:13:05 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2025-07-09-react-data-fetching-study-guide-from-useeffect-to-server-components/</guid>
      <description>리액트 데이터 페칭의 기초부터 최신 서버 컴포넌트까지, 단계별 발전 과정을 예제와 함께 완벽하게 알아봅니다.</description>
    </item>
    <item>
      <title>옛날 방식과 React Query, 그리고 서버 컴포넌트까지 React Data Fetching 완전 정복하기</title>
      <link>https://mycodingshub.github.io/blog/2024-08-25-3-ways-in-data-fetching-with-react/</link>
      <pubDate>Sun, 25 Aug 2024 13:02:28 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-08-25-3-ways-in-data-fetching-with-react/</guid>
      <description>이 글에서는 클라이언트 컴포넌트와 서버 컴포넌트에서 데이터를 가져오는 방법, 캐싱 및 Suspense 활용법, 그리고 React 개발자가 꼭 알아야 할 최신 데이터 페칭 베스트 프랙티스를 상세히 다룹니다.</description>
    </item>
    <item>
      <title>React Query로 구현하는 간단하고 강력한 상태 관리 솔루션</title>
      <link>https://mycodingshub.github.io/blog/2024-07-16-use-tanstack-react-query-as-global-state-management/</link>
      <pubDate>Tue, 16 Jul 2024 12:49:15 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2024-07-16-use-tanstack-react-query-as-global-state-management/</guid>
      <description>React Query를 활용하여 Redux나 Zustand 대신 간단하고 강력한 상태 관리 시스템을 구현하는 방법을 소개합니다. 기존 데이터 페칭 라이브러리를 사용해 비동기 상태 관리도 함께 다루어봅니다.</description>
    </item>
    <item>
      <title>React Query 강좌 8편. useMutation 사용법과 Optimistic Updates</title>
      <link>https://mycodingshub.github.io/blog/2023-10-02-react-query-howto-usemutation-in-depth/</link>
      <pubDate>Mon, 02 Oct 2023 11:07:53 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2023-10-02-react-query-howto-usemutation-in-depth/</guid>
      <description>React Query에서 useMutaion 사용법과 최상의 UX를 위한 Optimistic Updates 구현하기</description>
    </item>
    <item>
      <title>React Query 강좌 7편. 페이지네이션 구현하기와 useInfiniteQuery로 무한스크롤 구현하기</title>
      <link>https://mycodingshub.github.io/blog/2023-09-24-react-query-paginated-query-and-infinite-query/</link>
      <pubDate>Sun, 24 Sep 2023 11:23:47 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2023-09-24-react-query-paginated-query-and-infinite-query/</guid>
      <description>페이지네이션 구현하기와 useInfiniteQuery로 무한스크롤 구현하기</description>
    </item>
    <item>
      <title>React Query 강좌 5편. 동적 병렬 쿼리(dynamic parallel queries)와 필요충분 쿼리 만들기(dependent query)</title>
      <link>https://mycodingshub.github.io/blog/2023-09-24-react-query-dynamic-parallel-queries-and-dependent-query/</link>
      <pubDate>Sun, 24 Sep 2023 07:45:20 +0000</pubDate>
      <guid>https://mycodingshub.github.io/blog/2023-09-24-react-query-dynamic-parallel-queries-and-dependent-query/</guid>
      <description>동적 병렬 쿼리(dynamic parallel queries)와 필요충분 쿼리 만들기(dependent query)</description>
    </item>
  </channel>
</rss>
